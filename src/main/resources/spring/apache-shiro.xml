<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/util  
    http://www.springframework.org/schema/util/spring-util-3.0.xsd"
	default-lazy-init="true">

	<description>Shiro安全配置</description>
	
	<bean id="shiroConfig"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="order" value="1" />
		<property name="ignoreUnresolvablePlaceholders" value="true" />
		<property name="locations" value="classpath:shiro.properties" />
	</bean>
		<!-- 缓存管理器 使用Ehcache实现 -->  
	<bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">  
	    <property name="cacheManagerConfigFile" value="classpath:ehcache-shiro.xml"/>  
	</bean>  
	  
	<!-- 凭证匹配器 -->  
	<bean id="credentialsMatcher" class="com.zc.system.shiro.credentials.RetryLimitHashedCredentialsMatcher">  
	    <constructor-arg ref="cacheManager"/>  
	    <property name="hashAlgorithmName" value="md5"/>  
	    <property name="hashIterations" value="2"/>  
	    <property name="storedCredentialsHexEncoded" value="true"/>  
	</bean>
	  
	<!-- Realm实现 -->  
	<bean id="userRealm" class="com.zc.system.shiro.realm.UserRealm">  
	    <property name="credentialsMatcher" ref="credentialsMatcher"/>  
	    <property name="cachingEnabled" value="true"/>  
	    <property name="authenticationCachingEnabled" value="true"/>  
	    <property name="authenticationCacheName" value="authenticationCache"/>  
	    <property name="authorizationCachingEnabled" value="true"/>  
	    <property name="authorizationCacheName" value="authorizationCache"/>  
	</bean>  
	<!-- 会话ID生成器 -->  
	<bean id="sessionIdGenerator"   
	class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>  
	<!-- 会话DAO -->  
	<bean id="sessionDAO"   
	class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">  
	    <property name="activeSessionsCacheName" value="shiro-activeSessionCache"/>  
	    <property name="sessionIdGenerator" ref="sessionIdGenerator"/>  
	</bean>  
	<!-- 会话验证调度器  
	<bean id="sessionValidationScheduler"   
	class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler">  
	    <property name="sessionValidationInterval" value="1800000"/>  
	    <property name="sessionManager" ref="sessionManager"/>  
	</bean> --> 
	<!-- 会话Cookie模板 --> 
	<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">  
	    <constructor-arg value="sid"/>  
	    <property name="httpOnly" value="true"/>  
	    <property name="maxAge" value="180000"/>  
	</bean>
	<!--  会话管理器--> 
	<bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">  
	    <property name="globalSessionTimeout" value="1800000"/>  
	    <property name="deleteInvalidSessions" value="true"/>  
	    <!--property name="sessionValidationSchedulerEnabled" value="true"/>  
	    <property name="sessionValidationScheduler" ref="sessionValidationScheduler"/-->  
	    <property name="sessionDAO" ref="sessionDAO"/>  
	    <property name="sessionIdCookieEnabled" value="true"/>  
    	<property name="sessionIdCookie" ref="sessionIdCookie"/> 
	</bean>  
	<!-- 安全管理器 -->  
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">  
	    <property name="realms">  
	        <list><ref bean="userRealm"/></list>  
	    </property>  
	    <property name="sessionManager" ref="sessionManager"/>  
	    <!-- <property name="cacheManager" ref="cacheManager"/>   -->
	</bean>  
	<!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->  
	<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">  
	<property name="staticMethod"   
	value="org.apache.shiro.SecurityUtils.setSecurityManager"/>  
	    <property name="arguments" ref="securityManager"/>  
	</bean>  
	<!-- Shiro生命周期处理器-->  
	<bean id="lifecycleBeanPostProcessor"   
	class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/> 
	
	<!-- 基于Form表单的身份验证过滤器 -->  
	<!-- 
	<bean id="formAuthenticationFilter"   
	class="org.apache.shiro.web.filter.authc.FormAuthenticationFilter">  
	    <property name="usernameParam" value="username"/>  
	    <property name="passwordParam" value="password"/>  
	    <property name="loginUrl" value="/login.jsp"/>  
	</bean>
	 --> 
	  <bean id="webUserLogoutFilter"  class="com.zc.system.shiro.filters.WebUserLogoutFilter"/>
	 <bean id="webUserFilter"  class="com.zc.system.shiro.filters.WebUserFilter"/>
	<!-- Shiro的Web过滤器 -->  
		<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">  
		    <property name="securityManager" ref="securityManager"/>  
		    <property name="loginUrl" value="${shiro.loginUrl}"/>  
		    <property name="unauthorizedUrl" value="${shiro.loginUrl}"/>  
		    <property name="filters">  
		        <util:map>  
		            <entry key="webUserFilter" value-ref="webUserFilter"/> 
		            <entry key="webUserLogoutFilter" value-ref="webUserLogoutFilter"/> 
		        </util:map>  
		    </property>  
		    <property name="filterChainDefinitions">  
		        <value>  
		        	/static/* = anon
		            /user/login.do = anon
		            /user/logout.do = webUserLogoutFilter
		            / = authc,webUserFilter
		            /index.do = authc,webUserFilter
		            /customers/* = authc,webUserFilter
		            /orders/* = authc,webUserFilter
		            /products/* = authc,webUserFilter
		            /settlement/* = authc,webUserFilter
		        </value>  
		    </property>  
		</bean>
	
</beans>